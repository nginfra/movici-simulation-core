name: Main

on:
  push:
    branches:
    - main
    tags:
    - v[0-9]+.[0-9]+.[0-9]+

jobs:
  test-all-platforms:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
        # somehow these versions fail in ci, something to do with sqlite/spatialite
        - os: windows-latest
          python-version: "3.8"
        - os: windows-latest
          python-version: "3.9"

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python${{ matrix.python-version }}-pip-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-python${{ matrix.python-version }}-pip-

    - name: Install Spatialite
      uses: ./.github/actions/install-spatialite
      with:
        os: ${{ matrix.os }}

    - name: Install dependencies and package
      run: |
        python -m pip install --upgrade pip
        pip install .[models,dev]

    - name: Run tests
      run: |
        cd tests
        pytest .

  deploy:
    # We only want to run the deploy job if we've just created a version tag. in `on.push.tags`
    # we've specified to only this workflow on specific tags (and the main branch and pull
    # requests), so here we only need to check if we've been triggered from a tag
    if: startsWith(github.ref, 'refs/tags')
    environment: PyPI
    runs-on: ubuntu-latest
    needs: [test-all-platforms]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        repository_url: ${{ secrets.PYPI_REPOSITORY_URL }}

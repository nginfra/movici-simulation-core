image: eu.gcr.io/movici-develop/cicd-build-env:latest

stages:
  - verify
  - test
  - report
  - deploy
  - docs

.with_gcloud:
  variables:
  before_script:
    - gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS

check_version_upgrade:
  stage: verify
  image: alpine/git
  only:
    refs:
      - merge_requests
  variables:
    VERSION_FILES: "VERSION"
  script:
    - git fetch origin master
    - |-
      if [[ -z $(git diff origin/master --name-only ${VERSION_FILES}) ]]; then
        echo "All merge requests require a version upgrade. Please update your version"
        exit 1
      fi

test:static:
  stage: test
  only:
    refs:
      - merge_requests
      - master
  artifacts:
    untracked: true
  script:
    - pip install -r requirements-dev.txt --extra-index-url=$PYPI_SERVER_URL --trusted-host=$PYPI_SERVER_HOST
    - make lint

test:unit:
  stage: test
  only:
    refs:
      - merge_requests
      - master
  artifacts:
    untracked: true
  before_script:
    - pip install -r requirements-dev.txt
    - pip install -r requirements.txt
    - pip install -r requirements-models.txt --extra-index-url=$PYPI_SERVER_URL --trusted-host=$PYPI_SERVER_HOST
    - pip install --no-deps -e .[models]
  script:
    - make coverage
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)$/'

test:numba:
  stage: test
  only:
    refs:
      - master
  variables:
    KUBERNETES_MEMORY_REQUEST: 1536Mi
    KUBERNETES_MEMORY_LIMIT: 1536Mi
    KUBERNETES_CPU_REQUEST: 1000m
    KUBERNETES_CPU_LIMIT: 2000m
  before_script:
    - pip install -r requirements-dev.txt
    - pip install -r requirements.txt
    - pip install -r requirements-models.txt --extra-index-url=$PYPI_SERVER_URL --trusted-host=$PYPI_SERVER_HOST
    - pip install --no-deps -e .[models]
  script:
    - make test-numba

test:docs:
  stage: test
  only:
    refs:
      - merge_requests
      - master
  before_script:
    - pip install -r requirements-dev.txt
    - pip install -r requirements-docs.txt
    - pip install -r requirements.txt
    - pip install -r requirements-models.txt --extra-index-url=$PYPI_SERVER_URL --trusted-host=$PYPI_SERVER_HOST
    - pip install --no-deps -e .[models]
  
  script:
    - make docs
    - make doctest

report:
  stage: report
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  only:
    refs:
      - merge_requests
      - master
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
    KUBERNETES_MEMORY_REQUEST: 1536Mi
    KUBERNETES_MEMORY_LIMIT: 1536Mi
    KUBERNETES_CPU_REQUEST: 400m
    KUBERNETES_CPU_LIMIT: 800m
  dependencies:
    - test:unit
    - test:static
  script:
    - sonar-scanner -Dsonar.branch.name="${CI_COMMIT_REF_NAME}" -Dsonar.projectVersion=$(tail -1 VERSION)

deploy:package:
  stage: deploy
  only:
    - master
    - /^testci-.*$/
  script:
    - pip wheel --no-deps --wheel-dir dist .
    - twine upload --repository-url $PYPI_SERVER dist/*.whl

.deploy:model_engine:version:
  stage: deploy
  before_script:
    - pip install bump2version
  retry: 1
  variables:
    REQUIREMENTS_FILE_NAME: requirements-docker.txt
  only:
    - /^.*testci.*$/
    - master
  script:
    - bin/commit-version-to-modelengine-repo.sh

docs:
  stage: docs
  image: eu.gcr.io/movici-develop/cicd-pipeline-tools:latest
  only:
    refs:
      - /^.*docsci.*$/
      - master
  variables:
    GCS_BUCKET: movici-docs
    CLOUDSDK_CORE_PROJECT: movici-production
    KUBERNETES_MEMORY_REQUEST: 1536Mi
    KUBERNETES_MEMORY_LIMIT: 1536Mi
    KUBERNETES_CPU_REQUEST: 1000m
    KUBERNETES_CPU_LIMIT: 2000m
  before_script:
    - gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
    - pip install -r requirements-dev.txt
    - pip install -r requirements-docs.txt
    - pip install -r requirements.txt
    - pip install -r requirements-models.txt --extra-index-url=$PYPI_SERVER_URL --trusted-host=$PYPI_SERVER_HOST
    - pip install --no-deps -e .[models]

  script:
    - make docs
    - gsutil -m cp -R /docs/build/html/* gs://$GCS_BUCKET/
